name: GitHub OIDC Oracle

on:
  schedule:
    # Run every hour to keep the oracle updated
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  oidc-oracle:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for commit SHA

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Get current commit SHA
      id: commit-sha
      run: |
        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Generate OpenPubkey attestation
      id: attestation
      run: |
        go run ./cmd/generate_attestation \
          --commit-sha "${{ steps.commit-sha.outputs.sha }}" \
          --timestamp "${{ steps.commit-sha.outputs.timestamp }}" \
          --url "https://vstoken.actions.githubusercontent.com/.well-known/jwks" \
          --output-file attestations/github-oidc-attestation.json

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: attestation-${{ steps.commit-sha.outputs.short_sha }}
        name: OIDC Oracle Attestation - ${{ steps.commit-sha.outputs.short_sha }}
        body: |
          # OIDC Oracle Attestation
          
          **Generated:** ${{ steps.commit-sha.outputs.timestamp }}
          **Commit SHA:** ${{ steps.commit-sha.outputs.sha }}
          ## <TODO - bigup ethan>

          **Short SHA:** ${{ steps.commit-sha.outputs.short_sha }}
          **Issuer:** https://token.actions.githubusercontent.com
          
          ## Attestation Details
          
          This attestation was generated by the GitHub OIDC Oracle workflow using OpenPubkey.
          The workflow automatically discovered GitHub's OIDC configuration and downloaded
          the current public keys, creating a cryptographically verifiable attestation
          linking the keys to the current state of this repository.

          
          
          ## Files
          
          - `github-oidc-attestation.json`: OpenPubkey attestation with embedded JWKS
          
          ## Verification
          
          The attestation can be verified using OpenPubkey tools and the public keys
          contained in this repository.
        draft: false
        prerelease: false
        files: |
          attestations/github-oidc-attestation.json
        generate_release_notes: false

    - name: Clean up temporary files
      run: |
        echo "ðŸ§¹ Cleaning up temporary attestation files..."
        rm -rf attestations/
        echo "âœ… Temporary files cleaned up"

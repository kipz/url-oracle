name: Verify Attestation

on:
  workflow_call:
jobs:
  verify-attestation:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - name: Set attestation filenames and workflow reference
      run: |
        echo "ATTESTATION_FILE=attestation.json" >> $GITHUB_ENV
        echo "PREVIOUS_ATTESTATION_FILE=previous_attestation.json" >> $GITHUB_ENV
        # Construct job_workflow_ref in the format: owner/repo/.github/workflows/workflow-file@ref
        JOB_WORKFLOW_REF="${{ github.repository }}/.github/workflows/verify-attestation.yml@${{ github.ref }}"
        echo "EXPECTED_WORKFLOW_REF=${JOB_WORKFLOW_REF}" >> $GITHUB_ENV
    
    - name: Download attestation
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.ATTESTATION_FILE }}
    - name: Extract commit SHA from attestation
      id: extract_commit_sha
      run: |
        COMMIT_SHA=$(jq -r '.payload.commit_sha' ${{ env.ATTESTATION_FILE }})
        echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
    - name: Checkout repository at commit SHA
      uses: actions/checkout@v4
      with:
        repository: kipz/url-oracle
        ref: ${{ env.COMMIT_SHA }}
    - name: Download attestation again
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.ATTESTATION_FILE }}
    - name: Verify attestation
      run: |
        go run cmd/verify_attestation/main.go cmd/verify_attestation/verifier.go --attestation-file ${{ env.ATTESTATION_FILE }}

    - name: Comment on commit (if possible)
      run: |
        echo "üîç Verification completed for commit ${{ env.COMMIT_SHA }}"
        echo "üìã Summary: Attestation verified successfully"
